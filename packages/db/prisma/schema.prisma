generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int                 @id @default(autoincrement())
  email              String?             @unique
  name               String?
  number             String              @unique
  password           String
  Balance            Balance?
  onRampTransactions onRampTransaction[]
  //When you define two relations between the same two models, you need to add the name argument in the @relation attribute to disambiguate them.
  sentTransfers      p2pTransfer[]       @relation(name: "FromUserRelation")
  receivedTransfers  p2pTransfer[]       @relation(name: "ToUserRelation")
}

model Merchant {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  auth_type AuthType
}

model Balance {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  amount Int
  locked Int
  user   User @relation(fields: [userId], references: [id])
}

model onRampTransaction {
  id        Int          @id @default(autoincrement())
  status    OnRampStatus
  token     String       @unique
  provider  String // from where balacnce is ramped
  amount    Int
  startTime DateTime
  userId    Int
  user      User         @relation(fields: [userId], references: [id])
}

model p2pTransfer {
  id         Int      @id @default(autoincrement())
  amount     Int
  timestamp  DateTime
  fromUserId Int
  remarks    String
  purpose    Purpose
  fromUser   User     @relation(name: "FromUserRelation", fields: [fromUserId], references: [id])
  toUserId   Int
  toUser     User     @relation(name: "ToUserRelation", fields: [toUserId], references: [id])
}

enum AuthType {
  Google
  Github
}

enum OnRampStatus {
  Processing
  Success
  Failure
}

enum Purpose {
  Utility
  Bill_Sharing
  Saving
}
